generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Carrera {
  id       Int       @id @default(autoincrement())
  nombre   String    @db.VarChar(50)
  codigo   Int
  usuarios Usuario[]

  @@map("carreras")
}

model Grupo {
  id           Int          @id @default(autoincrement())
  nombre       String       @db.VarChar(50)
  creador_id   Int
  creador      Usuario      @relation("GrupoCreador", fields: [creador_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__usuarios")
  invitaciones Invitacion[]
  miembros     Miembro[]

  @@index([creador_id], map: "FK__usuarios")
  @@map("grupos")
}

model Invitacion {
  id        Int               @id @default(autoincrement())
  fecha     DateTime?         @db.Date
  sender_id Int?
  reciver   String?           @db.VarChar(50)
  estado    EstadoInvitacion?
  grupo_id  Int?
  grupo     Grupo?            @relation(fields: [grupo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_invitaciones_grupos")
  sender    Usuario?          @relation("InvitacionesUsuario", fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_invitaciones_usuarios")

  @@index([grupo_id], map: "FK_invitaciones_grupos")
  @@index([sender_id], map: "FK_invitaciones_usuarios")
  @@map("invitaciones")
}

model Miembro {
  id         Int     @id
  usuario_id Int
  grupo_id   Int
  grupo      Grupo   @relation(fields: [grupo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__grupos")
  usuario    Usuario @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__usuarios_2")

  @@index([grupo_id], map: "FK__grupos")
  @@index([usuario_id], map: "FK__usuarios_2")
  @@map("miembros")
}

model Usuario {
  id                   Int           @id @default(autoincrement())
  nombres              String        @db.VarChar(50)
  apellidos            String        @db.VarChar(50)
  fecha                DateTime?     @db.Date
  nivel                Int?
  correo               String        @db.VarChar(50)
  celular              String?       @db.VarChar(50)
  telefono             String?       @db.VarChar(50)
  rol                  usuarios_rol?
  carnet               String?       @db.VarChar(50)
  carrera_id           Int?
  grupos               Grupo[]       @relation("GrupoCreador")
  invitacionesEnviadas Invitacion[]  @relation("InvitacionesUsuario")
  miembros             Miembro[]
  carrera              Carrera?      @relation(fields: [carrera_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_usuarios_carreras")

  @@index([carrera_id], map: "FK_usuarios_carreras")
  @@map("usuarios")
}

enum EstadoInvitacion {
  pendiente
  aceptada
  rechazada
}

enum usuarios_rol {
  admin
  estudiante
  profesor
  oficina
}
